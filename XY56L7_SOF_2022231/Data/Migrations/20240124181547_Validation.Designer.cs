// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XY56L7_SOF_2022231.Data;

#nullable disable

namespace XY56L7_SOF_2022231.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240124181547_Validation")]
    partial class Validation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Car", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Uid = "5003f6c2-7778-4bab-8d28-d0dad5d78eb0",
                            Age = 10,
                            OwnerId = "user1",
                            Price = 20000,
                            Title = "Phoenix 1"
                        },
                        new
                        {
                            Uid = "8d8e1150-e2ae-4067-a573-290a7eb033b8",
                            Age = 10,
                            OwnerId = "user2",
                            Price = 20000,
                            Title = "Nebula 2"
                        },
                        new
                        {
                            Uid = "3191fa4c-6fd9-471d-8d44-4db7aff7420b",
                            Age = 10,
                            OwnerId = "user3",
                            Price = 20000,
                            Title = "Quantum 3"
                        },
                        new
                        {
                            Uid = "5f580c1e-5be8-4503-89fa-3119cf5e1f8d",
                            Age = 10,
                            OwnerId = "user4",
                            Price = 20000,
                            Title = "Infinity 4"
                        },
                        new
                        {
                            Uid = "a35d6aa2-3c79-45a2-8f5b-6548b2c99be7",
                            Age = 10,
                            OwnerId = "user5",
                            Price = 20000,
                            Title = "Pegasus 5"
                        },
                        new
                        {
                            Uid = "7d744dc7-daab-42c1-b064-2f12cca4da76",
                            Age = 10,
                            OwnerId = "user6",
                            Price = 20000,
                            Title = "Aurora 6"
                        },
                        new
                        {
                            Uid = "a794a728-46b6-4339-a133-552aa7b34cfe",
                            Age = 10,
                            OwnerId = "user7",
                            Price = 20000,
                            Title = "Raptor 7"
                        },
                        new
                        {
                            Uid = "d8bc3fa3-d5a2-4390-8a70-786b7a4950e0",
                            Age = 10,
                            OwnerId = "user8",
                            Price = 20000,
                            Title = "Zenith 8"
                        },
                        new
                        {
                            Uid = "1d5447e1-0ccf-4b85-b6f7-0b95dc2218bf",
                            Age = 10,
                            OwnerId = "user9",
                            Price = 20000,
                            Title = "Vortex 9"
                        },
                        new
                        {
                            Uid = "e9ea500f-67e8-48b5-9cd3-1e0cbca0d4e4",
                            Age = 10,
                            OwnerId = "user10",
                            Price = 20000,
                            Title = "Spectra 10"
                        },
                        new
                        {
                            Uid = "7b0220ae-f5cd-4a92-b340-91894d4e9b7c",
                            Age = 10,
                            OwnerId = "user11",
                            Price = 20000,
                            Title = "Phoenix 11"
                        },
                        new
                        {
                            Uid = "5ed96804-deeb-4139-aa45-c2c80f8c0bea",
                            Age = 10,
                            OwnerId = "user12",
                            Price = 20000,
                            Title = "Nebula 12"
                        },
                        new
                        {
                            Uid = "574d36d3-1991-407c-8e21-bef7a3b73b1a",
                            Age = 10,
                            OwnerId = "user13",
                            Price = 20000,
                            Title = "Quantum 13"
                        },
                        new
                        {
                            Uid = "019e0fe8-cd1e-4ba0-81f8-6bbe9d69eff3",
                            Age = 10,
                            OwnerId = "user14",
                            Price = 20000,
                            Title = "Infinity 14"
                        },
                        new
                        {
                            Uid = "4b1dd94c-e5ba-4d90-b16f-100feaea9831",
                            Age = 10,
                            OwnerId = "user15",
                            Price = 20000,
                            Title = "Pegasus 15"
                        },
                        new
                        {
                            Uid = "d9074204-9537-4e65-91c6-e17e0dd10313",
                            Age = 10,
                            OwnerId = "user16",
                            Price = 20000,
                            Title = "Aurora 16"
                        },
                        new
                        {
                            Uid = "5a8df38a-d704-4dc0-841f-94fbf9c2bf5a",
                            Age = 10,
                            OwnerId = "user17",
                            Price = 20000,
                            Title = "Raptor 17"
                        },
                        new
                        {
                            Uid = "16ac288c-40fd-4295-b558-65d6d8c758d2",
                            Age = 10,
                            OwnerId = "user18",
                            Price = 20000,
                            Title = "Zenith 18"
                        },
                        new
                        {
                            Uid = "292bf993-0e53-4cc7-bf0a-8237fc5e084a",
                            Age = 10,
                            OwnerId = "user19",
                            Price = 20000,
                            Title = "Vortex 19"
                        },
                        new
                        {
                            Uid = "8b3d9815-76c5-4c6c-a67d-d07aea8d0e5d",
                            Age = 10,
                            OwnerId = "user20",
                            Price = 20000,
                            Title = "Spectra 20"
                        });
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Motorcycle", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("OwnerId");

                    b.ToTable("Motorcycles");

                    b.HasData(
                        new
                        {
                            Uid = "5003f6c2-7778-4bab-8d28-d0dad5d78eb0",
                            Age = 10,
                            OwnerId = "user1",
                            Price = 20000,
                            Title = "Phoenix 1"
                        },
                        new
                        {
                            Uid = "8d8e1150-e2ae-4067-a573-290a7eb033b8",
                            Age = 10,
                            OwnerId = "user2",
                            Price = 20000,
                            Title = "Nebula 2"
                        },
                        new
                        {
                            Uid = "3191fa4c-6fd9-471d-8d44-4db7aff7420b",
                            Age = 10,
                            OwnerId = "user3",
                            Price = 20000,
                            Title = "Quantum 3"
                        },
                        new
                        {
                            Uid = "5f580c1e-5be8-4503-89fa-3119cf5e1f8d",
                            Age = 10,
                            OwnerId = "user4",
                            Price = 20000,
                            Title = "Infinity 4"
                        },
                        new
                        {
                            Uid = "a35d6aa2-3c79-45a2-8f5b-6548b2c99be7",
                            Age = 10,
                            OwnerId = "user5",
                            Price = 20000,
                            Title = "Pegasus 5"
                        },
                        new
                        {
                            Uid = "7d744dc7-daab-42c1-b064-2f12cca4da76",
                            Age = 10,
                            OwnerId = "user6",
                            Price = 20000,
                            Title = "Aurora 6"
                        },
                        new
                        {
                            Uid = "a794a728-46b6-4339-a133-552aa7b34cfe",
                            Age = 10,
                            OwnerId = "user7",
                            Price = 20000,
                            Title = "Raptor 7"
                        },
                        new
                        {
                            Uid = "d8bc3fa3-d5a2-4390-8a70-786b7a4950e0",
                            Age = 10,
                            OwnerId = "user8",
                            Price = 20000,
                            Title = "Zenith 8"
                        },
                        new
                        {
                            Uid = "1d5447e1-0ccf-4b85-b6f7-0b95dc2218bf",
                            Age = 10,
                            OwnerId = "user9",
                            Price = 20000,
                            Title = "Vortex 9"
                        },
                        new
                        {
                            Uid = "e9ea500f-67e8-48b5-9cd3-1e0cbca0d4e4",
                            Age = 10,
                            OwnerId = "user10",
                            Price = 20000,
                            Title = "Spectra 10"
                        },
                        new
                        {
                            Uid = "7b0220ae-f5cd-4a92-b340-91894d4e9b7c",
                            Age = 10,
                            OwnerId = "user11",
                            Price = 20000,
                            Title = "Phoenix 11"
                        },
                        new
                        {
                            Uid = "5ed96804-deeb-4139-aa45-c2c80f8c0bea",
                            Age = 10,
                            OwnerId = "user12",
                            Price = 20000,
                            Title = "Nebula 12"
                        },
                        new
                        {
                            Uid = "574d36d3-1991-407c-8e21-bef7a3b73b1a",
                            Age = 10,
                            OwnerId = "user13",
                            Price = 20000,
                            Title = "Quantum 13"
                        },
                        new
                        {
                            Uid = "019e0fe8-cd1e-4ba0-81f8-6bbe9d69eff3",
                            Age = 10,
                            OwnerId = "user14",
                            Price = 20000,
                            Title = "Infinity 14"
                        },
                        new
                        {
                            Uid = "4b1dd94c-e5ba-4d90-b16f-100feaea9831",
                            Age = 10,
                            OwnerId = "user15",
                            Price = 20000,
                            Title = "Pegasus 15"
                        },
                        new
                        {
                            Uid = "d9074204-9537-4e65-91c6-e17e0dd10313",
                            Age = 10,
                            OwnerId = "user16",
                            Price = 20000,
                            Title = "Aurora 16"
                        },
                        new
                        {
                            Uid = "5a8df38a-d704-4dc0-841f-94fbf9c2bf5a",
                            Age = 10,
                            OwnerId = "user17",
                            Price = 20000,
                            Title = "Raptor 17"
                        },
                        new
                        {
                            Uid = "16ac288c-40fd-4295-b558-65d6d8c758d2",
                            Age = 10,
                            OwnerId = "user18",
                            Price = 20000,
                            Title = "Zenith 18"
                        },
                        new
                        {
                            Uid = "292bf993-0e53-4cc7-bf0a-8237fc5e084a",
                            Age = 10,
                            OwnerId = "user19",
                            Price = 20000,
                            Title = "Vortex 19"
                        },
                        new
                        {
                            Uid = "8b3d9815-76c5-4c6c-a67d-d07aea8d0e5d",
                            Age = 10,
                            OwnerId = "user20",
                            Price = 20000,
                            Title = "Spectra 20"
                        });
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.SiteUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("SiteUser");

                    b.HasData(
                        new
                        {
                            Id = "user1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "17f4bc96-662b-47b2-a43f-8403e70d8d95",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b5e13518-fa8f-4e82-86fe-75d5256f1235",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 1, 2, 3 },
                            FirstName = "Elena",
                            LastName = "Martinez"
                        },
                        new
                        {
                            Id = "user2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c75aaf83-e401-4563-a88e-ca78a1b546f4",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dca328dc-c5cf-46e5-bc33-a3ea076b1623",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 2, 3, 4 },
                            FirstName = "Victor",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = "user3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2ccf4782-3671-4783-ae72-232057570ed1",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "67b5894f-32b3-4fa9-b182-c682874d04dc",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 3, 4, 5 },
                            FirstName = "Sophia",
                            LastName = "Garcia"
                        },
                        new
                        {
                            Id = "user4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c6d79487-48f4-47fd-82b5-80ded8d6edf6",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b433189-4c01-48f6-9dfd-fe938e828c8c",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 4, 5, 6 },
                            FirstName = "Oliver",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = "user5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bcea31ea-f395-423f-8745-d9236260e3c4",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d0407c76-f329-4a94-852b-d24517478729",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 5, 6, 7 },
                            FirstName = "Isabella",
                            LastName = "Rodriguez"
                        },
                        new
                        {
                            Id = "user6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "849044e1-a437-4b4a-9df8-7d437142d413",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "75ce0926-a37c-42d8-8204-95df3f36359e",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 6, 7, 8 },
                            FirstName = "Max",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = "user7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "24264161-c051-43fa-bcfd-d5016dcd55a7",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c79e7c86-42bc-439d-a0a9-be4cbe442431",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 7, 8, 9 },
                            FirstName = "Emma",
                            LastName = "Lee"
                        },
                        new
                        {
                            Id = "user8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87032b1b-039b-49c0-8424-b97b20feb555",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "212446b7-09d0-48b6-960f-5f47d18d80e9",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 8, 9, 10 },
                            FirstName = "Leo",
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = "user9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0880f871-26ae-4180-af95-d2495ea5f17a",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b3de8d05-57ed-409c-b8b5-6eca6afc8a1e",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 9, 10, 11 },
                            FirstName = "Ava",
                            LastName = "Hernandez"
                        },
                        new
                        {
                            Id = "user10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1106e0e9-d62f-49ec-89bf-3542df6eb5d7",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e8db093d-d252-4bf8-baae-4cdfcf6c78c1",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 10, 11, 12 },
                            FirstName = "Liam",
                            LastName = "Taylor"
                        },
                        new
                        {
                            Id = "user11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "08d6412a-8d6e-4ca4-a69d-56754273cfb7",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8579365b-c514-4fee-bd8d-5ba838f088a4",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 11, 12, 13 },
                            FirstName = "Mia",
                            LastName = "Clark"
                        },
                        new
                        {
                            Id = "user12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "755e45b4-4e71-46bf-83f9-9c771cea5f30",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "7c39687b-d114-4f00-9019-e43b778ffc6c",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 12, 13, 14 },
                            FirstName = "Gabriel",
                            LastName = "Lewis"
                        },
                        new
                        {
                            Id = "user13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "da38c12e-5a3b-4e80-8e9b-8da08cba46b4",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "32e942c6-ad51-4b9e-a6c9-d45d6bf2a8d4",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 13, 14, 15 },
                            FirstName = "Luna",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = "user14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "daba6323-97cc-451b-b82e-caeb08691243",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9aa02e6a-e400-478b-8509-8f81f8cf2ae1",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 14, 15, 16 },
                            FirstName = "Sebastian",
                            LastName = "Hall"
                        },
                        new
                        {
                            Id = "user15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "26b3250c-b1ac-46c7-99cf-b4e78ee666e1",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "86c648a4-71e6-4139-867d-144dd61ee299",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 15, 16, 17 },
                            FirstName = "Zoe",
                            LastName = "Young"
                        },
                        new
                        {
                            Id = "user16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "ec0586c5-3400-4ca9-bc2a-13ec0b993655",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "88e72a6f-5bfa-4aed-bb15-fdac6a03366e",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 16, 17, 18 },
                            FirstName = "Lucas",
                            LastName = "Hill"
                        },
                        new
                        {
                            Id = "user17",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5e5eff51-b264-43a6-b2f5-dae560154d32",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "75cc5102-62f2-4eea-a3b5-93a21017f9af",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 17, 18, 19 },
                            FirstName = "Chloe",
                            LastName = "Cooper"
                        },
                        new
                        {
                            Id = "user18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f2990f92-e500-477d-b62f-e9db595b2b0d",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "11d4709b-d389-4e5a-96ee-9ed6abae9c12",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 18, 19, 20 },
                            FirstName = "Mateo",
                            LastName = "Baker"
                        },
                        new
                        {
                            Id = "user19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "64ac0316-4af4-42a6-bd00-bb04bb648323",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "06cc9e05-7558-4ff4-a4b2-e8e498eac221",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 19, 20, 21 },
                            FirstName = "Nora",
                            LastName = "Ward"
                        },
                        new
                        {
                            Id = "user20",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2bf136d3-2c47-4685-949d-3334262a5246",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2391ac49-f404-497f-8815-14fc43824c46",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 20, 21, 22 },
                            FirstName = "Alex",
                            LastName = "Anderson"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Car", b =>
                {
                    b.HasOne("XY56L7_SOF_2022231.Models.SiteUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Motorcycle", b =>
                {
                    b.HasOne("XY56L7_SOF_2022231.Models.SiteUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
