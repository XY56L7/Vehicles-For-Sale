// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XY56L7_SOF_2022231.Data;

#nullable disable

namespace XY56L7_SOF_2022231.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240123231604_motorcycle_seeded_data")]
    partial class motorcycle_seeded_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Car", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Uid = "44ad334d-7910-4d92-b2c5-57352a245068",
                            OwnerId = "user1",
                            Title = "Phoenix 1"
                        },
                        new
                        {
                            Uid = "bdbe8e5f-6076-43d5-9833-1e832aba4ce7",
                            OwnerId = "user2",
                            Title = "Nebula 2"
                        },
                        new
                        {
                            Uid = "812fe2ec-5704-4f8a-8521-cc9055023122",
                            OwnerId = "user3",
                            Title = "Quantum 3"
                        },
                        new
                        {
                            Uid = "acf5177a-c8be-4575-83b3-bce0d5722a70",
                            OwnerId = "user4",
                            Title = "Infinity 4"
                        },
                        new
                        {
                            Uid = "545e13e1-6c18-43d1-953e-e75c68a97fe9",
                            OwnerId = "user5",
                            Title = "Pegasus 5"
                        },
                        new
                        {
                            Uid = "39a0c1a9-f874-4918-a374-f59ccc1b7bee",
                            OwnerId = "user6",
                            Title = "Aurora 6"
                        },
                        new
                        {
                            Uid = "c34bdbc1-d47a-49dd-be62-55804b45f435",
                            OwnerId = "user7",
                            Title = "Raptor 7"
                        },
                        new
                        {
                            Uid = "12f01652-5372-4db0-889f-3c3834f9484b",
                            OwnerId = "user8",
                            Title = "Zenith 8"
                        },
                        new
                        {
                            Uid = "b2adaf73-99d7-4867-a5b2-89f5f1298ef7",
                            OwnerId = "user9",
                            Title = "Vortex 9"
                        },
                        new
                        {
                            Uid = "b399f290-9f2a-480e-8572-77c067ade7e3",
                            OwnerId = "user10",
                            Title = "Spectra 10"
                        },
                        new
                        {
                            Uid = "4ab5739b-5ba4-4e4a-a5df-01043917da81",
                            OwnerId = "user11",
                            Title = "Phoenix 11"
                        },
                        new
                        {
                            Uid = "c3329ff7-b781-4d4f-b8dc-e9abbf1aa26d",
                            OwnerId = "user12",
                            Title = "Nebula 12"
                        },
                        new
                        {
                            Uid = "52cb1b8a-17ff-4711-9985-ec442dbe4930",
                            OwnerId = "user13",
                            Title = "Quantum 13"
                        },
                        new
                        {
                            Uid = "8fdf35fc-bcd0-478a-ade4-8ac2034ef4bd",
                            OwnerId = "user14",
                            Title = "Infinity 14"
                        },
                        new
                        {
                            Uid = "7a0aceed-dca1-4ddd-844f-91d5354ac347",
                            OwnerId = "user15",
                            Title = "Pegasus 15"
                        },
                        new
                        {
                            Uid = "7312b3bb-0bd4-409e-a301-4cdb5516a1d7",
                            OwnerId = "user16",
                            Title = "Aurora 16"
                        },
                        new
                        {
                            Uid = "5456318e-ff19-49ec-92fb-2d9cce7e5e5a",
                            OwnerId = "user17",
                            Title = "Raptor 17"
                        },
                        new
                        {
                            Uid = "217231fa-38d1-47cb-88fb-206c01cfa90b",
                            OwnerId = "user18",
                            Title = "Zenith 18"
                        },
                        new
                        {
                            Uid = "a3a933bb-6151-42a3-9d46-c3bf158d0645",
                            OwnerId = "user19",
                            Title = "Vortex 19"
                        },
                        new
                        {
                            Uid = "64fcfcf1-b670-4975-a8e9-bb7bbe873639",
                            OwnerId = "user20",
                            Title = "Spectra 20"
                        });
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Motorcycle", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("OwnerId");

                    b.ToTable("Motorcycles");

                    b.HasData(
                        new
                        {
                            Uid = "44ad334d-7910-4d92-b2c5-57352a245068",
                            OwnerId = "user1",
                            Title = "Phoenix 1"
                        },
                        new
                        {
                            Uid = "bdbe8e5f-6076-43d5-9833-1e832aba4ce7",
                            OwnerId = "user2",
                            Title = "Nebula 2"
                        },
                        new
                        {
                            Uid = "812fe2ec-5704-4f8a-8521-cc9055023122",
                            OwnerId = "user3",
                            Title = "Quantum 3"
                        },
                        new
                        {
                            Uid = "acf5177a-c8be-4575-83b3-bce0d5722a70",
                            OwnerId = "user4",
                            Title = "Infinity 4"
                        },
                        new
                        {
                            Uid = "545e13e1-6c18-43d1-953e-e75c68a97fe9",
                            OwnerId = "user5",
                            Title = "Pegasus 5"
                        },
                        new
                        {
                            Uid = "39a0c1a9-f874-4918-a374-f59ccc1b7bee",
                            OwnerId = "user6",
                            Title = "Aurora 6"
                        },
                        new
                        {
                            Uid = "c34bdbc1-d47a-49dd-be62-55804b45f435",
                            OwnerId = "user7",
                            Title = "Raptor 7"
                        },
                        new
                        {
                            Uid = "12f01652-5372-4db0-889f-3c3834f9484b",
                            OwnerId = "user8",
                            Title = "Zenith 8"
                        },
                        new
                        {
                            Uid = "b2adaf73-99d7-4867-a5b2-89f5f1298ef7",
                            OwnerId = "user9",
                            Title = "Vortex 9"
                        },
                        new
                        {
                            Uid = "b399f290-9f2a-480e-8572-77c067ade7e3",
                            OwnerId = "user10",
                            Title = "Spectra 10"
                        },
                        new
                        {
                            Uid = "4ab5739b-5ba4-4e4a-a5df-01043917da81",
                            OwnerId = "user11",
                            Title = "Phoenix 11"
                        },
                        new
                        {
                            Uid = "c3329ff7-b781-4d4f-b8dc-e9abbf1aa26d",
                            OwnerId = "user12",
                            Title = "Nebula 12"
                        },
                        new
                        {
                            Uid = "52cb1b8a-17ff-4711-9985-ec442dbe4930",
                            OwnerId = "user13",
                            Title = "Quantum 13"
                        },
                        new
                        {
                            Uid = "8fdf35fc-bcd0-478a-ade4-8ac2034ef4bd",
                            OwnerId = "user14",
                            Title = "Infinity 14"
                        },
                        new
                        {
                            Uid = "7a0aceed-dca1-4ddd-844f-91d5354ac347",
                            OwnerId = "user15",
                            Title = "Pegasus 15"
                        },
                        new
                        {
                            Uid = "7312b3bb-0bd4-409e-a301-4cdb5516a1d7",
                            OwnerId = "user16",
                            Title = "Aurora 16"
                        },
                        new
                        {
                            Uid = "5456318e-ff19-49ec-92fb-2d9cce7e5e5a",
                            OwnerId = "user17",
                            Title = "Raptor 17"
                        },
                        new
                        {
                            Uid = "217231fa-38d1-47cb-88fb-206c01cfa90b",
                            OwnerId = "user18",
                            Title = "Zenith 18"
                        },
                        new
                        {
                            Uid = "a3a933bb-6151-42a3-9d46-c3bf158d0645",
                            OwnerId = "user19",
                            Title = "Vortex 19"
                        },
                        new
                        {
                            Uid = "64fcfcf1-b670-4975-a8e9-bb7bbe873639",
                            OwnerId = "user20",
                            Title = "Spectra 20"
                        });
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.SiteUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Wealth")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("SiteUser");

                    b.HasData(
                        new
                        {
                            Id = "user1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "b762dfc9-a023-466b-8e1a-b87a89cfb39e",
                            Email = "user1@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d9ee92dc-2720-43cd-815a-61e73e737eb9",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 1, 2, 3 },
                            FirstName = "Elena",
                            LastName = "Martinez",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d0e0b92-6b21-4e3b-a4e8-bff21f3a5ceb",
                            Email = "user2@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "054d4c96-7e7b-4e5b-a02f-8639f914be51",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 2, 3, 4 },
                            FirstName = "Victor",
                            LastName = "Smith",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "454a8691-443d-4d95-990d-bf53b9bc1bdf",
                            Email = "user3@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "e9a679de-3aed-43de-b1a8-082cdb843fd2",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 3, 4, 5 },
                            FirstName = "Sophia",
                            LastName = "Garcia",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "83ca6f47-87d3-4ad8-8d3c-22ef70f13635",
                            Email = "user4@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f544dfb5-8485-4d5b-8957-f594f6f3c503",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 4, 5, 6 },
                            FirstName = "Oliver",
                            LastName = "Johnson",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "32da52e7-9cb8-4f92-93ae-f613918cc107",
                            Email = "user5@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "81fbcc20-7aaa-426e-8d98-335d89857e95",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 5, 6, 7 },
                            FirstName = "Isabella",
                            LastName = "Rodriguez",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7bc0dcfa-3228-4113-a6e8-10697528789b",
                            Email = "user6@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d2747fca-dec5-4320-90e2-7f5c83561fc2",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 6, 7, 8 },
                            FirstName = "Max",
                            LastName = "Brown",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2991e5ce-3dad-4ebf-a2ca-b531e3bea7e9",
                            Email = "user7@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c742bde3-5b38-4fa9-87b6-7533c8bb03fc",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 7, 8, 9 },
                            FirstName = "Emma",
                            LastName = "Lee",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1d18561c-d7f5-43ea-9d6a-5bb9da296c34",
                            Email = "user8@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6779fba3-ea66-47ab-a17b-ded3f7551631",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 8, 9, 10 },
                            FirstName = "Leo",
                            LastName = "Davis",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cc8698d3-4d7a-47d2-9068-5ea997310967",
                            Email = "user9@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b29bf648-f74b-4b49-996f-b1c405597dbb",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 9, 10, 11 },
                            FirstName = "Ava",
                            LastName = "Hernandez",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6a9ed30e-3c03-4b46-82e5-8dc58fa317b3",
                            Email = "user10@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b8df631c-9a62-4259-b2a5-cbde8a3d88c9",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 10, 11, 12 },
                            FirstName = "Liam",
                            LastName = "Taylor",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "bd3fac12-da74-4431-93f9-13135e3ee076",
                            Email = "user11@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "ccf7c58e-572d-42af-9164-f2361df10a64",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 11, 12, 13 },
                            FirstName = "Mia",
                            LastName = "Clark",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "2ea846e7-87d6-4e06-910c-6f7346f85b6f",
                            Email = "user12@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "b5c1ec5a-3a94-4e87-8bc7-30190e54c7dd",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 12, 13, 14 },
                            FirstName = "Gabriel",
                            LastName = "Lewis",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4c54c25d-86b5-4a74-b9c4-3f6013eb7e87",
                            Email = "user13@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2bfd08e7-f236-48ac-bf5a-55114c93746b",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 13, 14, 15 },
                            FirstName = "Luna",
                            LastName = "Walker",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e6a95c7-f46f-417b-9315-269c94d0690e",
                            Email = "user14@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8486ca38-c629-4e51-be34-d2561a62b2b0",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 14, 15, 16 },
                            FirstName = "Sebastian",
                            LastName = "Hall",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "0045ccfd-b413-42ca-96de-ad1af7742d67",
                            Email = "user15@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "9b870862-e23d-432a-81ef-2df6396897dd",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 15, 16, 17 },
                            FirstName = "Zoe",
                            LastName = "Young",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "1e2c2670-2d22-40af-a0df-2f64cc67cc83",
                            Email = "user16@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c52a9290-08a2-465e-8d3e-602179851e49",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 16, 17, 18 },
                            FirstName = "Lucas",
                            LastName = "Hill",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user17",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "3ec1fd15-bbdc-4226-ab7c-e8407145151e",
                            Email = "user17@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "2b7920fb-9d0c-4fef-9a1c-8f6301b870c9",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 17, 18, 19 },
                            FirstName = "Chloe",
                            LastName = "Cooper",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "501853ea-7f77-4b4d-a413-2f8bbbe8715e",
                            Email = "user18@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4b9223f4-0eb3-4a36-98fd-77e0223bfb16",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 18, 19, 20 },
                            FirstName = "Mateo",
                            LastName = "Baker",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c1068255-dcd1-459f-bb12-4aae4110e500",
                            Email = "user19@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "74ccd812-5a24-4c6f-8246-baca19bd6afe",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 19, 20, 21 },
                            FirstName = "Nora",
                            LastName = "Ward",
                            Wealth = 50000
                        },
                        new
                        {
                            Id = "user20",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7072959d-55b8-4091-a27e-f0159267437e",
                            Email = "user20@example.com",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cb0d682b-dd88-4a03-9159-82e57217bb90",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 20, 21, 22 },
                            FirstName = "Alex",
                            LastName = "Anderson",
                            Wealth = 50000
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Car", b =>
                {
                    b.HasOne("XY56L7_SOF_2022231.Models.SiteUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Motorcycle", b =>
                {
                    b.HasOne("XY56L7_SOF_2022231.Models.SiteUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
