// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using XY56L7_SOF_2022231.Data;

#nullable disable

namespace XY56L7_SOF_2022231.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240124183152_new_fake_data")]
    partial class new_fake_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Car", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("OwnerId");

                    b.ToTable("Cars");

                    b.HasData(
                        new
                        {
                            Uid = "b01601d9-3724-4366-8d60-9a3e0fb23b6f",
                            Age = 10,
                            OwnerId = "user1",
                            Price = 20000,
                            Title = "Phoenix 1"
                        },
                        new
                        {
                            Uid = "e009c034-49cb-4959-8deb-af66f407ac01",
                            Age = 10,
                            OwnerId = "user2",
                            Price = 20000,
                            Title = "Nebula 2"
                        },
                        new
                        {
                            Uid = "cb2639ff-cb28-4392-a46d-b5c370de38c3",
                            Age = 10,
                            OwnerId = "user3",
                            Price = 20000,
                            Title = "Quantum 3"
                        },
                        new
                        {
                            Uid = "ed404289-9f19-47b4-bf8c-97fba01066a2",
                            Age = 10,
                            OwnerId = "user4",
                            Price = 20000,
                            Title = "Infinity 4"
                        },
                        new
                        {
                            Uid = "22c06b4b-7280-4c03-86af-7e700ad1b4b2",
                            Age = 10,
                            OwnerId = "user5",
                            Price = 20000,
                            Title = "Pegasus 5"
                        },
                        new
                        {
                            Uid = "12e15201-9619-42a2-b910-e09edd23677e",
                            Age = 10,
                            OwnerId = "user6",
                            Price = 20000,
                            Title = "Aurora 6"
                        },
                        new
                        {
                            Uid = "4e2eff9f-f520-4f72-b228-bcfccc74e2ae",
                            Age = 10,
                            OwnerId = "user7",
                            Price = 20000,
                            Title = "Raptor 7"
                        },
                        new
                        {
                            Uid = "c8923f1f-d08a-4b63-a36b-e0b006103dc1",
                            Age = 10,
                            OwnerId = "user8",
                            Price = 20000,
                            Title = "Zenith 8"
                        },
                        new
                        {
                            Uid = "72eb46d7-c487-4f01-bad1-2c85054cbd0f",
                            Age = 10,
                            OwnerId = "user9",
                            Price = 20000,
                            Title = "Vortex 9"
                        },
                        new
                        {
                            Uid = "28970963-fdea-4e70-b657-2bfb2bc20f56",
                            Age = 10,
                            OwnerId = "user10",
                            Price = 20000,
                            Title = "Spectra 10"
                        },
                        new
                        {
                            Uid = "f357caf7-0bf9-46df-bbee-4b145af17117",
                            Age = 10,
                            OwnerId = "user11",
                            Price = 20000,
                            Title = "Phoenix 11"
                        },
                        new
                        {
                            Uid = "cda99043-7e41-4fe3-8155-00c35d1096a7",
                            Age = 10,
                            OwnerId = "user12",
                            Price = 20000,
                            Title = "Nebula 12"
                        },
                        new
                        {
                            Uid = "e5c79840-279a-4f14-ade7-6155738191ba",
                            Age = 10,
                            OwnerId = "user13",
                            Price = 20000,
                            Title = "Quantum 13"
                        },
                        new
                        {
                            Uid = "102e5464-03c2-4298-b8b3-456c762e52b5",
                            Age = 10,
                            OwnerId = "user14",
                            Price = 20000,
                            Title = "Infinity 14"
                        },
                        new
                        {
                            Uid = "652a38e2-0de6-455d-8402-0a096446783a",
                            Age = 10,
                            OwnerId = "user15",
                            Price = 20000,
                            Title = "Pegasus 15"
                        },
                        new
                        {
                            Uid = "630bcea6-893f-43c5-8b17-fa194a1baa40",
                            Age = 10,
                            OwnerId = "user16",
                            Price = 20000,
                            Title = "Aurora 16"
                        },
                        new
                        {
                            Uid = "94387b93-944a-4e24-a084-9a00aba21bb8",
                            Age = 10,
                            OwnerId = "user17",
                            Price = 20000,
                            Title = "Raptor 17"
                        },
                        new
                        {
                            Uid = "084599a9-8d58-428a-9799-1543fed0237d",
                            Age = 10,
                            OwnerId = "user18",
                            Price = 20000,
                            Title = "Zenith 18"
                        },
                        new
                        {
                            Uid = "8e39203d-0292-4de5-8cee-dcc6df29a967",
                            Age = 10,
                            OwnerId = "user19",
                            Price = 20000,
                            Title = "Vortex 19"
                        },
                        new
                        {
                            Uid = "6dc7ac57-b8e0-4db5-bd4c-a52795a69aba",
                            Age = 10,
                            OwnerId = "user20",
                            Price = 20000,
                            Title = "Spectra 20"
                        });
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Motorcycle", b =>
                {
                    b.Property<string>("Uid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("OwnerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Uid");

                    b.HasIndex("OwnerId");

                    b.ToTable("Motorcycles");

                    b.HasData(
                        new
                        {
                            Uid = "b01601d9-3724-4366-8d60-9a3e0fb23b6f",
                            Age = 10,
                            OwnerId = "user1",
                            Price = 20000,
                            Title = "Phoenix 1"
                        },
                        new
                        {
                            Uid = "e009c034-49cb-4959-8deb-af66f407ac01",
                            Age = 10,
                            OwnerId = "user2",
                            Price = 20000,
                            Title = "Nebula 2"
                        },
                        new
                        {
                            Uid = "cb2639ff-cb28-4392-a46d-b5c370de38c3",
                            Age = 10,
                            OwnerId = "user3",
                            Price = 20000,
                            Title = "Quantum 3"
                        },
                        new
                        {
                            Uid = "ed404289-9f19-47b4-bf8c-97fba01066a2",
                            Age = 10,
                            OwnerId = "user4",
                            Price = 20000,
                            Title = "Infinity 4"
                        },
                        new
                        {
                            Uid = "22c06b4b-7280-4c03-86af-7e700ad1b4b2",
                            Age = 10,
                            OwnerId = "user5",
                            Price = 20000,
                            Title = "Pegasus 5"
                        },
                        new
                        {
                            Uid = "12e15201-9619-42a2-b910-e09edd23677e",
                            Age = 10,
                            OwnerId = "user6",
                            Price = 20000,
                            Title = "Aurora 6"
                        },
                        new
                        {
                            Uid = "4e2eff9f-f520-4f72-b228-bcfccc74e2ae",
                            Age = 10,
                            OwnerId = "user7",
                            Price = 20000,
                            Title = "Raptor 7"
                        },
                        new
                        {
                            Uid = "c8923f1f-d08a-4b63-a36b-e0b006103dc1",
                            Age = 10,
                            OwnerId = "user8",
                            Price = 20000,
                            Title = "Zenith 8"
                        },
                        new
                        {
                            Uid = "72eb46d7-c487-4f01-bad1-2c85054cbd0f",
                            Age = 10,
                            OwnerId = "user9",
                            Price = 20000,
                            Title = "Vortex 9"
                        },
                        new
                        {
                            Uid = "28970963-fdea-4e70-b657-2bfb2bc20f56",
                            Age = 10,
                            OwnerId = "user10",
                            Price = 20000,
                            Title = "Spectra 10"
                        },
                        new
                        {
                            Uid = "f357caf7-0bf9-46df-bbee-4b145af17117",
                            Age = 10,
                            OwnerId = "user11",
                            Price = 20000,
                            Title = "Phoenix 11"
                        },
                        new
                        {
                            Uid = "cda99043-7e41-4fe3-8155-00c35d1096a7",
                            Age = 10,
                            OwnerId = "user12",
                            Price = 20000,
                            Title = "Nebula 12"
                        },
                        new
                        {
                            Uid = "e5c79840-279a-4f14-ade7-6155738191ba",
                            Age = 10,
                            OwnerId = "user13",
                            Price = 20000,
                            Title = "Quantum 13"
                        },
                        new
                        {
                            Uid = "102e5464-03c2-4298-b8b3-456c762e52b5",
                            Age = 10,
                            OwnerId = "user14",
                            Price = 20000,
                            Title = "Infinity 14"
                        },
                        new
                        {
                            Uid = "652a38e2-0de6-455d-8402-0a096446783a",
                            Age = 10,
                            OwnerId = "user15",
                            Price = 20000,
                            Title = "Pegasus 15"
                        },
                        new
                        {
                            Uid = "630bcea6-893f-43c5-8b17-fa194a1baa40",
                            Age = 10,
                            OwnerId = "user16",
                            Price = 20000,
                            Title = "Aurora 16"
                        },
                        new
                        {
                            Uid = "94387b93-944a-4e24-a084-9a00aba21bb8",
                            Age = 10,
                            OwnerId = "user17",
                            Price = 20000,
                            Title = "Raptor 17"
                        },
                        new
                        {
                            Uid = "084599a9-8d58-428a-9799-1543fed0237d",
                            Age = 10,
                            OwnerId = "user18",
                            Price = 20000,
                            Title = "Zenith 18"
                        },
                        new
                        {
                            Uid = "8e39203d-0292-4de5-8cee-dcc6df29a967",
                            Age = 10,
                            OwnerId = "user19",
                            Price = 20000,
                            Title = "Vortex 19"
                        },
                        new
                        {
                            Uid = "6dc7ac57-b8e0-4db5-bd4c-a52795a69aba",
                            Age = 10,
                            OwnerId = "user20",
                            Price = 20000,
                            Title = "Spectra 20"
                        });
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.SiteUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Data")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("SiteUser");

                    b.HasData(
                        new
                        {
                            Id = "user1",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a81e040f-1e71-4d42-9c7b-f9ccdc33d95e",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1f0bf182-32ed-4ae1-81db-2f569e00a929",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 1, 2, 3 },
                            FirstName = "Elena",
                            LastName = "Martinez"
                        },
                        new
                        {
                            Id = "user2",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4a39b190-24a3-4338-8a54-af4295ec1222",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "6627cc00-b91b-4e60-af45-c4ed21758fba",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 2, 3, 4 },
                            FirstName = "Victor",
                            LastName = "Smith"
                        },
                        new
                        {
                            Id = "user3",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "48ea21b2-12ac-4f30-9a3b-e93b5ffcc7e5",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "dfb64a47-3d99-40e7-a4f5-5846b8ec8c5e",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 3, 4, 5 },
                            FirstName = "Sophia",
                            LastName = "Garcia"
                        },
                        new
                        {
                            Id = "user4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f5092573-db61-4d09-99b3-bfd22b211815",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1e57fcba-ea01-415d-874c-9ff10208cd81",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 4, 5, 6 },
                            FirstName = "Oliver",
                            LastName = "Johnson"
                        },
                        new
                        {
                            Id = "user5",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "64e26b1f-9fb1-48fc-8d59-49847609bad5",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "0cb84053-5f8b-4e76-a1d0-c07ca451715e",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 5, 6, 7 },
                            FirstName = "Isabella",
                            LastName = "Rodriguez"
                        },
                        new
                        {
                            Id = "user6",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8d20e129-7ba8-4946-9dd8-eb9e76b9ffcc",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8151df17-3378-4d37-b993-f6b8dcb629e1",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 6, 7, 8 },
                            FirstName = "Max",
                            LastName = "Brown"
                        },
                        new
                        {
                            Id = "user7",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8db013d6-5c26-40e9-8161-05e5b20ebaf3",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "459478cc-59fc-400f-bb07-147a5c692be6",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 7, 8, 9 },
                            FirstName = "Emma",
                            LastName = "Lee"
                        },
                        new
                        {
                            Id = "user8",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "fc686557-ba6f-47c0-833d-079b7e11a662",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "153284ad-bae5-4529-be4e-c114268d914f",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 8, 9, 10 },
                            FirstName = "Leo",
                            LastName = "Davis"
                        },
                        new
                        {
                            Id = "user9",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "a9565579-9d24-4694-9666-6352fa541ef4",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "36890e58-5528-44a1-9976-fa3713d766ad",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 9, 10, 11 },
                            FirstName = "Ava",
                            LastName = "Hernandez"
                        },
                        new
                        {
                            Id = "user10",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "38919630-9512-40a1-9718-d0329c1ad04a",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "d359b2ce-d096-4b98-86cf-46a0f89d3c71",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 10, 11, 12 },
                            FirstName = "Liam",
                            LastName = "Taylor"
                        },
                        new
                        {
                            Id = "user11",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "7aeb9624-e225-45e0-b013-650c2f910246",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "4a11f381-e76d-459d-996a-1dfa6f59f3f1",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 11, 12, 13 },
                            FirstName = "Mia",
                            LastName = "Clark"
                        },
                        new
                        {
                            Id = "user12",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5d10dc39-88ba-463f-b561-d566e70a3b8d",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "1b242d13-19ff-41be-b92d-204daee39769",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 12, 13, 14 },
                            FirstName = "Gabriel",
                            LastName = "Lewis"
                        },
                        new
                        {
                            Id = "user13",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "008cd088-a0e1-474d-a082-7812d813d6b6",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "44b3b027-fe1a-4950-8007-a4cfded7e629",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 13, 14, 15 },
                            FirstName = "Luna",
                            LastName = "Walker"
                        },
                        new
                        {
                            Id = "user14",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "6e55db02-10d3-452a-a2df-5ffd1cc12091",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "cbb342e3-b0b6-42bd-b2b6-28b47bd8b0f5",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 14, 15, 16 },
                            FirstName = "Sebastian",
                            LastName = "Hall"
                        },
                        new
                        {
                            Id = "user15",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "71a121ac-a494-40cd-98e4-44aeb002c85d",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "066b9ed5-1d9a-439f-97df-db90f5412ff6",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 15, 16, 17 },
                            FirstName = "Zoe",
                            LastName = "Young"
                        },
                        new
                        {
                            Id = "user16",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c19702e6-6084-40f6-98e9-4cf2e26572fe",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "fb6e93f7-856f-4431-9fc3-dedbdbfae742",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 16, 17, 18 },
                            FirstName = "Lucas",
                            LastName = "Hill"
                        },
                        new
                        {
                            Id = "user17",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "8ce6e55c-32d4-4041-a031-b79b4aa1efb0",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "363ea5ed-b0d0-498e-be6f-8e7b21e7287a",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 17, 18, 19 },
                            FirstName = "Chloe",
                            LastName = "Cooper"
                        },
                        new
                        {
                            Id = "user18",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "9055222a-7d9f-4a14-8c1f-1bf844c76444",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "f435c633-0264-4bc6-bad8-2f22695b3fd8",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 18, 19, 20 },
                            FirstName = "Mateo",
                            LastName = "Baker"
                        },
                        new
                        {
                            Id = "user19",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "35abbd1a-1e82-4a6b-816d-d6026e9e3d56",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "c540e297-deac-4886-8e86-00d6c8daf285",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 19, 20, 21 },
                            FirstName = "Nora",
                            LastName = "Ward"
                        },
                        new
                        {
                            Id = "user20",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "f13f3d4f-c101-411a-ac48-a889b9472666",
                            EmailConfirmed = false,
                            LockoutEnabled = false,
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "8abb112b-ddfe-4187-934e-c4b938ddb590",
                            TwoFactorEnabled = false,
                            ContentType = "",
                            Data = new byte[] { 20, 21, 22 },
                            FirstName = "Alex",
                            LastName = "Anderson"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Car", b =>
                {
                    b.HasOne("XY56L7_SOF_2022231.Models.SiteUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("XY56L7_SOF_2022231.Models.Motorcycle", b =>
                {
                    b.HasOne("XY56L7_SOF_2022231.Models.SiteUser", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Owner");
                });
#pragma warning restore 612, 618
        }
    }
}
